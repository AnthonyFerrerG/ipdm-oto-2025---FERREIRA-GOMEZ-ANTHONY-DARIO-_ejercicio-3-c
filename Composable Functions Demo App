
package com.example.composabledemo

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.text.BasicText
import androidx.compose.material3.Card
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.stringResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.composabledemo.ui.theme.ComposableDemoTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            ComposableDemoTheme {
                // Pantalla que muestra los cuatro cuadrantes
                QuadrantScreen()
            }
        }
    }
}

@Composable
fun QuadrantScreen() {
    // Contenedor para los cuadrantes
    Column(
        modifier = Modifier.fillMaxSize()
    ) {
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .weight(1f)
        ) {
            QuadrantCard(
                title = stringResource(id = R.string.text_composable),
                description = stringResource(id = R.string.text_composable_description),
                backgroundColor = Color(0xFFEADDFF)
            )
            QuadrantCard(
                title = stringResource(id = R.string.image_composable),
                description = stringResource(id = R.string.image_composable_description),
                backgroundColor = Color(0xFFD0BCFF)
            )
        }
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .weight(1f)
        ) {
            QuadrantCard(
                title = stringResource(id = R.string.row_composable),
                description = stringResource(id = R.string.row_composable_description),
                backgroundColor = Color(0xFFB69DF8)
            )
            QuadrantCard(
                title = stringResource(id = R.string.column_composable),
                description = stringResource(id = R.string.column_composable_description),
                backgroundColor = Color(0xFFF6EDFF)
            )
        }
    }
}

@Composable
fun QuadrantCard(title: String, description: String, backgroundColor: Color) {
    Card(
        modifier = Modifier
            .padding(16.dp)
            .fillMaxSize()
            .background(backgroundColor),
        elevation = 4.dp
    ) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp),
            horizontalAlignment = Alignment.CenterHorizontally,
            verticalArrangement = Arrangement.Center
        ) {
            // Título en negrita
            BasicText(
                text = title,
                style = MaterialTheme.typography.bodyLarge.copy(fontWeight = FontWeight.Bold),
                modifier = Modifier.padding(bottom = 16.dp)
            )
            // Descripción en fuente por defecto
            BasicText(
                text = description,
                style = MaterialTheme.typography.bodyMedium.copy(fontSize = 16.sp),
                modifier = Modifier.align(Alignment.Start)
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
fun DefaultPreview() {
    ComposableDemoTheme {
        QuadrantScreen()
    }
}
<resources>
    <!-- Títulos y descripciones para los cuadrantes -->
    <string name="text_composable">Text composable</string>
    <string name="text_composable_description">
        Displays text and follows the recommended Material Design guidelines.
    </string>

    <string name="image_composable">Image composable</string>
    <string name="image_composable_description">
        Creates a composable that lays out and draws a given Painter class object.
    </string>

    <string name="row_composable">Row composable</string>
    <string name="row_composable_description">
        A layout composable that places its children in a horizontal sequence.
    </string>

    <string name="column_composable">Column composable</string>
    <string name="column_composable_description">
        A layout composable that places its children in a vertical sequence.
    </string>
</resources>
package com.example.composabledemo.ui.theme

import androidx.compose.material3.Typography
import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Color
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.lightColorScheme

// Definición de los colores de la aplicación
private val LightColorScheme = lightColorScheme(
    primary = Color(0xFF6200EE),
    secondary = Color(0xFF03DAC5)
)

// Definición de la tipografía
private val Typography = Typography()

@Composable
fun ComposableDemoTheme(
    content: @Composable () -> Unit
) {
    MaterialTheme(
        colorScheme = LightColorScheme,
        typography = Typography,
        content = content
    )
}
